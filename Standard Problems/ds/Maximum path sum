/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int Path(TreeNode* root,int &maximum)
    {
        if(root==NULL)
            return 0;
        int left_path=Path(root->left,maximum);
        left_path=max(0,left_path);
        int right_path=Path(root->right,maximum);
        right_path=max(0,right_path);
        int res=root->val;
        res=res+left_path+right_path;
        maximum=max(maximum,res);
       // maximum=max(maximum,root->val);
        res=root->val+max(left_path,right_path);
        return max(res,root->val);
        //return res;
    }
    
    int maxPathSum(TreeNode* root) 
    {
        int maximum=INT_MIN;
        Path(root,maximum);
        return maximum;
    }
};
